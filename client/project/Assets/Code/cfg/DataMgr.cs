// Code generated by excelexporter. DO NOT EDIT
// https://github.com/fish-tennis/excelexporter

using Gserver;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.IO;

namespace cshap_client.cfg
{
    internal class DataMgr
    {
		//物品数据
		public static Dictionary<int, Gserver.ItemCfg> ItemCfgs;
		
		//条件模板
		public static Dictionary<int, Gserver.ConditionTemplateCfg> ConditionTemplateCfgs;
		
		//进度模板
		public static Dictionary<int, Gserver.ProgressTemplateCfg> ProgressTemplateCfgs;
		
		//等级配置
		
		public static List<Gserver.LevelExp> LevelExps;
		//兑换数据
		public static Dictionary<int, Gserver.ExchangeCfg> ExchangeCfgs;
		
		//任务数据
		public static Dictionary<int, Gserver.QuestCfg> Quests;
		
		//活动数据
		public static Dictionary<int, Gserver.ActivityCfg> ActivityCfgs;
		
		

		// 加载所有配置数据,由导表工具自动生成,后续可以优化加载速度
        public static void Load(string dataDir)
        {
			try
            {
                string jsonContent = File.ReadAllText(dataDir+"ItemCfg.json");
                ItemCfgs = JsonConvert.DeserializeObject<Dictionary<int, Gserver.ItemCfg>>(jsonContent);
                Console.WriteLine("Load ItemCfg.json:" + ItemCfgs.Count);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Load ItemCfg.json Err:" + ex.Message);
            }
			
            try
            {
                string jsonContent = File.ReadAllText(dataDir+"condition_template.json");
                ConditionTemplateCfgs = JsonConvert.DeserializeObject<Dictionary<int, Gserver.ConditionTemplateCfg>>(jsonContent);
                Console.WriteLine("Load condition_template.json:" + ConditionTemplateCfgs.Count);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Load condition_template.json Err:" + ex.Message);
            }
			
            try
            {
                string jsonContent = File.ReadAllText(dataDir+"progress_template.json");
                ProgressTemplateCfgs = JsonConvert.DeserializeObject<Dictionary<int, Gserver.ProgressTemplateCfg>>(jsonContent);
                Console.WriteLine("Load progress_template.json:" + ProgressTemplateCfgs.Count);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Load progress_template.json Err:" + ex.Message);
            }
			
            
			try
            {
                string jsonContent = File.ReadAllText(dataDir+"levelcfg.json");
                LevelExps = JsonConvert.DeserializeObject<List<Gserver.LevelExp>>(jsonContent);
                Console.WriteLine("Load levelcfg.json:" + LevelExps.Count);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Load levelcfg.json Err:" + ex.Message);
            }
            try
            {
                string jsonContent = File.ReadAllText(dataDir+"exchange.json");
                ExchangeCfgs = JsonConvert.DeserializeObject<Dictionary<int, Gserver.ExchangeCfg>>(jsonContent);
                Console.WriteLine("Load exchange.json:" + ExchangeCfgs.Count);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Load exchange.json Err:" + ex.Message);
            }
			
            try
            {
                string jsonContent = File.ReadAllText(dataDir+"Quests.json");
                Quests = JsonConvert.DeserializeObject<Dictionary<int, Gserver.QuestCfg>>(jsonContent);
                Console.WriteLine("Load Quests.json:" + Quests.Count);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Load Quests.json Err:" + ex.Message);
            }
			
            try
            {
                string jsonContent = File.ReadAllText(dataDir+"activitycfg.json");
                ActivityCfgs = JsonConvert.DeserializeObject<Dictionary<int, Gserver.ActivityCfg>>(jsonContent);
                Console.WriteLine("Load activitycfg.json:" + ActivityCfgs.Count);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Load activitycfg.json Err:" + ex.Message);
            }
			
            
        }
    }
}
